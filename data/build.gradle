plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    namespace 'com.khs.data'
    compileSdk Sdk.compile

    defaultConfig {
        minSdk Sdk.min
        targetSdk Sdk.target

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'NEXON_API_KEY', NEXON_API_KEY
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = Jvm.target
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation(project(":domain"))

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Kotlin.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Kotlin.coroutines}"
    implementation "javax.inject:javax.inject:${Jvm.inject}"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:${Network.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${Network.retrofit}"
    implementation "com.squareup.retrofit2:converter-scalars:${Network.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${Network.okhttpLogging}"

    // Room(DB)
    implementation "androidx.room:room-runtime:${AndroidX.room}"
    implementation "androidx.room:room-ktx:${AndroidX.room}"
    annotationProcessor "androidx.room:room-compiler:${AndroidX.room}"
    kapt "androidx.room:room-compiler:${AndroidX.room}"

    // Testing
    testImplementation "junit:junit:${Testing.junit}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Kotlin.coroutines}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Kotlin.coroutines}"
    testImplementation "androidx.test.ext:junit:${Testing.junitExt}"
    testImplementation "com.google.dagger:hilt-android-testing:${Google.hilt}"
    kaptTest "com.google.dagger:hilt-compiler:${Google.hilt}"

    kaptAndroidTest "com.google.dagger:hilt-compiler:${Google.hilt}"
    androidTestImplementation "com.google.dagger:hilt-android-testing:${Google.hilt}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Kotlin.coroutines}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${Testing.espresso}"
}